Endpoints:

  - Получение списка всех задач из базы данных.
    - Со следующей информацией: Id, название, описание, статус, дата создания.  

  - Создание задачи.
    - При создании необходимо указать: название, описание, статус.
  
  - Получение опеределенной задачи.
    - Со следующей информацией: Id, название, описание, статус, дата создания.
  
  - Обновление определенной задачи.
    - При обновлении обязательно должны быть заполнены поля: название и статус.

  - Удаление определенной задачи.

  - Получение списка задач по их статусу.



Примеры использования: 

  - Создание задачи (POST): 
    - http://localhost:8080/api/tasks. Со следующим содержимым:
      {
        "title": "Task name",
        "description": "Need to do this, this and this",
        "status": "Going on"
      }

  - Получение определенной задачи (GET):
    - http://localhost:8080/api/tasks/id. Где в качестве id указывается номер задачи

  - Обновление задачи (PUT):
    - http://localhost:8080/api/tasks/13. Со следующим содержанием, где поля Title и Status должны быть заполнены, а "13" id задачи:
      {
	      "title": "New task",
        "description": "Need to rock'n'roll",
        "status": "Pending"
      }

  - Получение списка всех задач (GET):
    - http://localhost:8080/api/tasks

  - Удаление задачи (DEL):
    - http://localhost:8080/api/tasks/12, где "12" id задачи. 

  - Поиск задач по их статусу (GET):
    - http://localhost:8080/api/status/status_example, где status_example заменяется на одно из значений: "Pending", "In progress", "Completed" (без ковычек)
    